// Code generated by MockGen. DO NOT EDIT.
// Source: iuser_factory.go

// Package users is a generated GoMock package.
package users

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUserFactory is a mock of IUserFactory interface.
type MockIUserFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIUserFactoryMockRecorder
}

// MockIUserFactoryMockRecorder is the mock recorder for MockIUserFactory.
type MockIUserFactoryMockRecorder struct {
	mock *MockIUserFactory
}

// NewMockIUserFactory creates a new mock instance.
func NewMockIUserFactory(ctrl *gomock.Controller) *MockIUserFactory {
	mock := &MockIUserFactory{ctrl: ctrl}
	mock.recorder = &MockIUserFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserFactory) EXPECT() *MockIUserFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIUserFactory) Create(name UserName) (*User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", name)
	ret0, _ := ret[0].(*User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIUserFactoryMockRecorder) Create(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIUserFactory)(nil).Create), name)
}
